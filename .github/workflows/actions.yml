- name: Setup Python environment
  uses: actions/setup-python@v1.1.1
  with:
    # Version range or exact version of a Python version to use, using semvers version range syntax.
    python-version: # optional, default is 3.x
    # The target architecture (x86, x64) of the Python interpreter.
    architecture: # optional, default is x64

name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
- name: Setup Node.js for use with actions
  uses: actions/setup-node@v1.1.0
  with:
    # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0, lts
    version: # optional, default is 10.x
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
    registry-url: # optional
    # Optional scope for authenticating against scoped registries
    scope: # optional
    
    name: 'Setup Python'
description: 'Set up a specific version of Python and add the command-line tools to the PATH'
author: 'GitHub'
inputs:
  python-version:
    description: 'Version range or exact version of a Python version to use, using semvers version range syntax.'
    default: '3.x'
  architecture:
    description: 'The target architecture (x86, x64) of the Python interpreter.'
    default: 'x64'
runs:
  using: 'node12'
  main: 'dist/index.js'
branding:
  icon: 'code'
  color: 'yellow'
  
name: Docker Image CI

on: [push]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)


name: Python application

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest

name: 'Setup Python'
description: 'Set up a specific version of Python and add the command-line tools to the PATH'
author: 'GitHub'
inputs:
  python-version:
    description: 'Version range or exact version of a Python version to use, using semvers version range syntax.'
    default: '3.x'
  architecture:
    description: 'The target architecture (x86, x64) of the Python interpreter.'
    default: 'x64'
runs:
  using: 'node12'
  main: 'dist/index.js'
branding:
  icon: 'code'
  color: 'yellow'
  
